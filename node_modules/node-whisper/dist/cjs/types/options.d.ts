import type { Language } from './language.js';
export type WhisperModel = 'tiny.en' | 'tiny' | 'base.en' | 'base' | 'small.en' | 'small' | 'medium.en' | 'medium' | 'large' | 'large-v1' | 'large-v2' | 'large-v3' | 'turbo';
export type StringOutputFormat = 'txt' | 'vtt' | 'srt' | 'tsv';
export type OutputFormat = StringOutputFormat | 'json';
export type AllOutputFormats = OutputFormat | 'all';
export interface AudioToTextOptions {
    model?: WhisperModel;
    model_dir?: string;
    device?: string;
    output_dir?: string;
    verbose?: boolean;
    task?: 'transcribe' | 'translate';
    language?: Language;
    temperature?: number;
    best_of?: number;
    beam_size?: number;
    patience?: number;
    length_penalty?: number;
    suppress_tokens?: string;
    initial_prompt?: string;
    condition_on_previous_text?: boolean;
    fp16?: boolean;
    temperature_increment_on_fallback?: number;
    compression_ratio_threshold?: number;
    logprob_threshold?: number;
    no_speech_threshold?: number;
    word_timestamps?: boolean;
    prepend_punctuations?: string;
    append_punctuations?: string;
    highlight_words?: boolean;
    max_line_width?: number;
    max_line_count?: number;
    max_words_per_line?: number;
    threads?: number;
}
//# sourceMappingURL=options.d.ts.map